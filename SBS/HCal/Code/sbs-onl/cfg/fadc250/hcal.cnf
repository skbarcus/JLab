#
# fadc250 config file - intelbbshower
#
# format:
# ~~~~~~~
# FADC250_CRATE     rocbcal1   <- ROC name, crate name, usually IP name
# FADC250_SLOTS     3  8  15   <- slot_numbers - in which next settings will be implemented
#                                                till file ends or next FADC250_SLOTS will be met
#
# FADC250_F_REV     0x02c1     <- firmware revision  (0x0 Bits:7-0)
# FADC250_B_REV     0x0a03     <- board revision     (0x0 Bits:15-8)
# FADC250_ID        0xfadc     <- board type         (0x0 Bits:31-16)
#
# FADC250_MODE      1   <- process mode: 1-4  (0x10C Bits:2-0)
# FADC250_COMPRESSION 0 <- compression mode: 0-2 (0x8 Bits:9,7-6)
#                          (0: disable  1: enable  2: enable and verify)
# FADC250_W_OFFSET  50  <- number of ns back from trigger point. (0x120)
#                            (in Manual it is  PL=Trigger_Window(ns) * 250MHz)
# FADC250_W_WIDTH   49  <- number of ns to include in trigger window. (0x11C)
#                            (in M:  PTW=Trigger_Window(ns) * 250MHz, minimum is 6)
# FADC250_NSB       3   <- number of ns before trigger point to include in data processing. (0x124)
#                            This include the trigger Point. (minimum is 2 samples (8 ns) in all mode)
# FADC250_NSA       6   <- number of ns after trigger point to include in data processing. (0x128)
#                            Minimum is 6 samples (mode 2) and 3 samples (mode 0 and 1).
#                            Number of sample report is 1 more for odd and 2 more for even NSA number.
# FADC250_NPEAK     1   <- number of Pulses in Mode 2 and 3.  (0x10C Bits:6-5)
#
#                   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 - channels ##
# FADC250_ADC_MASK  1  0  1  1  1  0  1  0  1  0  1  0  1  0  1  0   <- channel enable mask
#
# FADC250_TRG_MASK  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1   <- trigger enable mask 
# 
# FADC250_TRG_WIDTH   1  <- stretches pulse width of channel over threshold in 4ns ticks
# FADC250_TRG_MINTOT  1  <- minimum number of 4ns clocks channel must be over threshold to count towards multiplicity for FADC
# FADC250_TRG_MINMULT 1  <- minimum number of channels triggered simultaneously for FADC to send trigger to SD
#
# FADC250_TET       110        <- board Trigger Energy Threshold (TET), same for all 16 channels
# FADC250_CH_TET    0    110   <- channel# and TET_value for this channel
# FADC250_ALLCH_TET 111  222  2  3  4  5  6  7  8  9  10  11  12  13  14  15   <- 16 TETs (0x12C - 0x148)
#
# FADC250_DAC       3300       <- board DAC, one and the same for all 16 channels
# FADC250_CH_DAC    0    3300  <- channel# and DAC_value for this channel
# FADC250_ALLCH_DAC 3300 3280 3310 3280 3310 3280 3310 3280 3300 3280 3300 3280 3310 3280 3310 3280 <- 16 DACs
#
# FADC250_PED       210        <- board Pedestals, same for all channels
# FADC250_CH_PED    0    210   <- channel# and Pedestal_value for this channel
# FADC250_ALLCH_PED 210  220  210  215  215  220  220  210  210  215  215  220  220  210  215  220  <- 16 PEDs
#
# FADC250_GAIN       210        <- board Gains, same for all channels
# FADC250_CH_GAIN    0    210   <- channel# and Gain_value for this channel
# FADC250_ALLCH_GAIN 210  220  210  215  215  220  220  210  210  215  215  220  220  210  215  220  <- 16 GAINs
#
# FADC250_CH_DELAY    0   0     <- channel# and delay in ns
# FADC250_ALLCH_DELAY 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
# FADC250_TRG_MODE_MASK 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 <- 0=normal pulse trigger mode, 1=discriminator mode
# FADC250_INVERT_MASK 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 <- 0=ADC values not changed, 1=inverted ADC input polarity (i.e. ADC=4095-ADC)


FADC250_CRATE intelsbshcal1.jlab.org

##############
#
#    ALL SLOTS
#  offset, width in ns

FADC250_SLOTS all

#       channel:  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
FADC250_ADC_MASK  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
FADC250_TRG_MASK  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1

#modes=1 (raw sample), 7 ( pulse integral + Hi-res time) 
FADC250_MODE 1
# number of ns back from trigger point 680 ns = 170 * 4 (LEDs)
# number of ns back from trigger point 600 ns = 150 * 4 (Cosmic Scintillator Paddles)
# number of ns back from trigger point 660 ns = 155 * 4 (Cosmic Summing Modules)
FADC250_W_OFFSET 680
# number of ns to include in trigger window 200 ns = 50 * 4
FADC250_W_WIDTH 200
# number samples in ns before threshold crossing to include in integral 
FADC250_NSB 12
#number samples in ns after threshold crossing to include in integral 
# NSA/4 + NSB/4 must be odd number
FADC250_NSA 24
# number of peaks to keep ( the first peak info is kept) 
FADC250_NPEAK 1
# board Trigger Energy Threshold
FADC250_TET 0
# board DAC, one and the same for all 16 channels
FADC250_DAC 3300
# board Pedestals, same for all channels
FADC250_PED  0
# board Gains, same for all channels
FADC250_GAIN 1



FADC250_CRATE end

FADC250_CRATE intelsbshcal2.jlab.org

##############
#
#    ALL SLOTS
#  offset, width in ns

FADC250_SLOTS all

#       channel:  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
FADC250_ADC_MASK  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
FADC250_TRG_MASK  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1

#modes=1 (raw sample), 7 ( pulse integral + Hi-res time) 
FADC250_MODE 1
# number of ns back from trigger point 680 ns = 170 * 4 (LEDs)
# number of ns back from trigger point 600 ns = 150 * 4 (Cosmic Scintillator Paddles)
# number of ns back from trigger point 660 ns = 155 * 4 (Cosmic Summing Modules)
FADC250_W_OFFSET 680
# number of ns to include in trigger window 200 ns = 50 * 4
FADC250_W_WIDTH 200
# number samples in ns before threshold crossing to include in integral 
FADC250_NSB 12
#number samples in ns after threshold crossing to include in integral 
# NSA/4 + NSB/4 must be odd number
FADC250_NSA 24
# number of peaks to keep ( the first peak info is kept) 
FADC250_NPEAK 1
# board Trigger Energy Threshold
FADC250_TET 0
# board DAC, one and the same for all 16 channels
FADC250_DAC 3300
# board Pedestals, same for all channels
FADC250_PED  0
# board Gains, same for all channels
FADC250_GAIN 1



FADC250_CRATE end

